import java.awt.BorderLayout;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;


public class GUI extends KeyAdapter implements ActionListener{
	
	int count=0;
	static int random=0;
	static Scanner cin = new Scanner(System.in);
	Word [] word = new Word [1001] ;
	int vocabulary=0;
	private JFrame frame;
	private JPanel panel1;
	private JPanel panel2;
	private JButton start;
	private static JLabel label;
	private static JLabel judge;
	private static JLabel result;
	private JTextField text;
	
	public static void main(String[] args){
		new GUI();
		
	}
	
	public GUI() {
		frame = new JFrame();
		panel1 = new JPanel();
		start = new JButton("START");
		start.addActionListener(this);
		frame.add(panel1 , BorderLayout.CENTER);
		frame.add(start);
		
		
		
		frame.setBounds(400, 200, 1024, 512);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setTitle("Vocabulary");
		frame.setVisible(true);
		frame.setResizable(false);
		try {
			readFile();
		} catch (FileNotFoundException e1) {
			
			e1.printStackTrace();
		}
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		start.setVisible(false);
		panel1.setVisible(false);
		text = new JTextField(10);
		start.addActionListener(this);
		text.addKeyListener(this);
		
		label = new JLabel("按esc鍵開始");
		judge = new JLabel();
		result = new JLabel();
		panel2 = new JPanel();
		
		
		frame.add(panel2 , BorderLayout.CENTER);
		panel2.setLayout(new GridLayout(0 , 1));
		panel2.add(start);
		panel2.add(label);
		panel2.add(judge);
		panel2.add(result);
		panel2.add(text);
		
		panel2.setVisible(true);
	}
	
	void readFile() throws FileNotFoundException {
		File file =new File("C:\\Users\\user\\Desktop\\Hehe\\R3.txt");
		Scanner cout = new Scanner(new FileInputStream(file));
		
		while(cout.hasNext()) {
			String str=cout.nextLine();
			if(str.equals("")) {
				continue;
			}
			word[vocabulary] = new Word();
			
			int split1,split2;
			for(int i=0 ; true ; i++) {
				if(str.charAt(i)==' ') {
					split1=i;
					break;
				}
			}
			
			for(int i=str.length()-1 ; true ; i--) {
				if(str.charAt(i)==' ') {
					split2=i;
					break;
				}
			}
			
			word[vocabulary].ENG=str.substring(0 , split1);
			
			word[vocabulary].CH=str.substring(split2);
			word[vocabulary].partOfSpeech=str.substring(split1+1,split2); //[a,b)
			vocabulary++;
			
			//cout.close();
		}
	}
	
	@Override
	public void keyPressed(KeyEvent e) {
		int key = e.getKeyCode();
		switch(key) {
			case KeyEvent.VK_ENTER:
				String answer=text.getText();
				if(answer.equals(word[random].ENG)) {
					judge.setText("答對了");
					result.setText("");
					word[random].judge=true;
				}
				else {
					judge.setText("答錯了,答案是");
					result.setText(word[random].ENG);
				}
			break;
			case KeyEvent.VK_ESCAPE:
				testEnglish(word,vocabulary);
				text.setText("");
				judge.setText("");
				result.setText("");
			break;
		}

	}
	
	static void testEnglish(Word [] word , int vocabulary) {
		
		random = (int) (Math.random()*vocabulary);
		while(word[random].judge) {
			random = (int) (Math.random()*vocabulary);
		}
		label.setText(word[random].partOfSpeech+word[random].CH);
		
	}
		
	

}


class Word{
	String ENG=" ";
	String partOfSpeech=" ";
	String CH=" ";
	
	boolean judge=false;
	
}
